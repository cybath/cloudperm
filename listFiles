#!/usr/bin/python

from __future__ import print_function
import re

# From https://wiki.python.org/moin/PrintFails
# Python tries to be too pedantic and ends up failing royally.
# So we have to do this so that we can do things like pipe output to other commands.
import sys, codecs, locale;
sys.stdout = codecs.getwriter(locale.getpreferredencoding())(sys.stdout);

from cloudperm import *

import pprint


try:
    import argparse
    parser = argparse.ArgumentParser(parents=[cloudperm_argparser])
    parser.add_argument('documents', metavar='DocumentID', type=str, nargs='+', help='Google Document IDs')
    args = parser.parse_args()
except ImportError:
    args = None

def main():
    """List all files and folders recursively under the specified folder id.
    """

    folderids = [];

	# Get the arguments for the folders to check or from the config file.
    if (args.documents > 0):
        for folderid in args.documents:
            folderids.append(folderid)

    else:
        for section in parser.sections(): # Fix this later.
            for name,value in parser.items(section):
                if name == "url":
                    folderids.append(value)


    pp = pprint.PrettyPrinter(indent=4)

    credentials = get_credentials(args)
    http = credentials.authorize(httplib2.Http())
    service = discovery.build('drive', 'v2', http=http)
    numberoffiles = 0
	
    # Get our list of file IDs.
    for start_folder_id in folderids:
        #returnedfiles = get_files_in_folder(service, start_folder_id)
        returnedfiles = walk_folders(service, start_folder_id)
        #pp.pprint(returnedfiles)
        #print(type(returnedfiles))
        if type(returnedfiles) == list:
            for fileitem in returnedfiles:
                path = build_first_path(service,fileitem['id'])
                #print(fileitem['id'] + "    " + fileitem['mimeType'] + "     " + path  + fileitem['title'])
                fieldsep = u' \u2588 ' # Unicode Full block
                outputline = u"{1:<45} {0} {2:<45} {0} {3}".format(fieldsep, fileitem['id'], fileitem['mimeType'], path)
                print(outputline)
                #print(fileitem['id'] + "    " + fileitem['mimeType'] + "     " + fileitem['title'])
                numberoffiles+=1

    print("Total files: " + str(numberoffiles))

if __name__ == '__main__':
    main()
